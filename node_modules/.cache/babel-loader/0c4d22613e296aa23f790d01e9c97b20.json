{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\nconst INITIALIZE = 'exercise/INITIALIZE'; // 모든 내용 초기화\n\nconst UNLOAD_EXERCISE = 'exercise/UNLOAD_exercise'; //운동 비우기\n\nconst [WRITE_EXERCISE, WRITE_EXERCISE_SUCCESS, WRITE_EXERCISE_FAILIRE] = createRequestActionTypes('exercise/FIND_EXERCISE'); //운동 찾기\n\nexport const writeExercise = createAction(WRITE_EXERCISE, ({\n  title,\n  username\n}) => ({\n  title,\n  username\n}));\nexport const unloadExercise = createAction(UNLOAD_EXERCISE);\nconst writeExerciseSaga = createRequestSaga(WRITE_EXERCISE, authAPI.exercise);\nexport function* exerciseSaga() {\n  yield takeLatest(WRITE_EXERCISE, writeExerciseSaga);\n}\nconst initialState = {\n  exercise: null,\n  error: null\n};\nconst exercise = handleActions({\n  [INITIALIZE]: state => initialState,\n  [WRITE_EXERCISE]: state => ({ ...state,\n    exercise: null,\n    error: null\n  }),\n  [WRITE_EXERCISE_SUCCESS]: (state, {\n    payload: exercise\n  }) => ({ ...state,\n    exercise\n  }),\n  [WRITE_EXERCISE_FAILIRE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  }),\n  [UNLOAD_EXERCISE]: () => initialState\n}, initialState);\nexport default exercise;","map":{"version":3,"sources":["C:/Users/awd63/Desktop/project/project_holeinone/src/modules/exercise.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","authAPI","INITIALIZE","UNLOAD_EXERCISE","WRITE_EXERCISE","WRITE_EXERCISE_SUCCESS","WRITE_EXERCISE_FAILIRE","writeExercise","title","username","unloadExercise","writeExerciseSaga","exercise","exerciseSaga","initialState","error","state","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,iBAAP,IACIC,wBADJ,QAES,0BAFT;AAGA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AAEA,MAAMC,UAAU,GAAG,qBAAnB,C,CAA0C;;AAC1C,MAAMC,eAAe,GAAG,0BAAxB,C,CAAoD;;AACpD,MAAM,CACFC,cADE,EAEFC,sBAFE,EAGFC,sBAHE,IAIFN,wBAAwB,CAAC,wBAAD,CAJ5B,C,CAIwD;;AAExD,OAAO,MAAMO,aAAa,GAAGX,YAAY,CAACQ,cAAD,EAAiB,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,MAA0B;AAChFD,EAAAA,KADgF;AAEhFC,EAAAA;AAFgF,CAA1B,CAAjB,CAAlC;AAIP,OAAO,MAAMC,cAAc,GAAGd,YAAY,CAACO,eAAD,CAAnC;AAEP,MAAMQ,iBAAiB,GAAGZ,iBAAiB,CAACK,cAAD,EAAiBH,OAAO,CAACW,QAAzB,CAA3C;AAEA,OAAO,UAAUC,YAAV,GAAwB;AAC3B,QAAMf,UAAU,CAACM,cAAD,EAAiBO,iBAAjB,CAAhB;AACH;AAED,MAAMG,YAAY,GAAG;AACjBF,EAAAA,QAAQ,EAAE,IADO;AAEjBG,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,MAAMH,QAAQ,GAAGf,aAAa,CAC1B;AACI,GAACK,UAAD,GAAcc,KAAK,IAAIF,YAD3B;AAEI,GAACV,cAAD,GAAkBY,KAAK,KAAG,EACtB,GAAGA,KADmB;AAEtBJ,IAAAA,QAAQ,EAAE,IAFY;AAGtBG,IAAAA,KAAK,EAAE;AAHe,GAAH,CAF3B;AAOI,GAACV,sBAAD,GAA0B,CAACW,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEL;AAAX,GAAR,MAAkC,EACxD,GAAGI,KADqD;AAExDJ,IAAAA;AAFwD,GAAlC,CAP9B;AAWI,GAACN,sBAAD,GAA0B,CAACU,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEF;AAAX,GAAR,MAA+B,EACrD,GAAGC,KADkD;AAErDD,IAAAA;AAFqD,GAA/B,CAX9B;AAeI,GAACZ,eAAD,GAAmB,MAAMW;AAf7B,CAD0B,EAkB1BA,YAlB0B,CAA9B;AAqBA,eAAeF,QAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n    createRequestActionTypes\n  } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst INITIALIZE = 'exercise/INITIALIZE'; // 모든 내용 초기화\nconst UNLOAD_EXERCISE = 'exercise/UNLOAD_exercise'; //운동 비우기\nconst [\n    WRITE_EXERCISE,\n    WRITE_EXERCISE_SUCCESS,\n    WRITE_EXERCISE_FAILIRE,\n] = createRequestActionTypes('exercise/FIND_EXERCISE'); //운동 찾기\n\nexport const writeExercise = createAction(WRITE_EXERCISE, ({ title, username }) => ({\n    title,\n    username\n  }));\nexport const unloadExercise = createAction(UNLOAD_EXERCISE);\n\nconst writeExerciseSaga = createRequestSaga(WRITE_EXERCISE, authAPI.exercise);\n\nexport function* exerciseSaga(){\n    yield takeLatest(WRITE_EXERCISE, writeExerciseSaga);\n}\n\nconst initialState = {\n    exercise: null,\n    error: null,\n};\n\nconst exercise = handleActions(\n    {\n        [INITIALIZE]: state => initialState,\n        [WRITE_EXERCISE]: state=>({\n            ...state,\n            exercise: null,\n            error: null,\n        }),\n        [WRITE_EXERCISE_SUCCESS]: (state, { payload: exercise}) => ({\n            ...state,\n            exercise,\n        }),\n        [WRITE_EXERCISE_FAILIRE]: (state, { payload: error}) => ({\n            ...state,\n            error,\n        }),\n        [UNLOAD_EXERCISE]: () => initialState,\n    },\n    initialState,\n);\n\nexport default exercise;"]},"metadata":{},"sourceType":"module"}