{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\awd63\\\\Downloads\\\\AIhomeTraining_web-master\\\\AIhomeTraining_web-master\\\\Listener\\\\frontend\\\\src\\\\containers\\\\post\\\\PostViewerContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\nimport { setOriginalPost } from '../../modules/write';\nimport { removePost } from '../../lib/api/posts';\nimport { findLevel, unloadLevel } from '../../modules/level';\n\nconst PostViewerContainer = ({\n  match,\n  history\n}) => {\n  _s();\n\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const {\n    postId,\n    username\n  } = match.params;\n  const dispatch = useDispatch();\n  const {\n    post,\n    error,\n    loading,\n    user,\n    levels\n  } = useSelector(({\n    post,\n    loading,\n    user,\n    level\n  }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n    user: user.user,\n    levels: level.levelInfo\n  }));\n  useEffect(() => {\n    dispatch(readPost(postId));\n    dispatch(findLevel({\n      username\n    })); // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n\n    return () => {\n      dispatch(unloadPost());\n      dispatch(unloadLevel());\n    };\n  }, [dispatch, postId]);\n\n  const onEdit = () => {\n    dispatch(setOriginalPost(post));\n    history.push('/write');\n  };\n\n  const onRemove = async () => {\n    try {\n      await removePost(postId);\n      history.push('/postlist');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const ownPost = (user && user._id) === (post && post.user._id);\n  return /*#__PURE__*/_jsxDEV(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    levels: levels,\n    actionButtons: ownPost && /*#__PURE__*/_jsxDEV(PostActionButtons, {\n      onEdit: onEdit,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 108\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PostViewerContainer, \"8BNmUugs4gkth936Lo6woSgrHfY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PostViewerContainer;\nexport default _c2 = withRouter(PostViewerContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostViewerContainer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/awd63/Downloads/AIhomeTraining_web-master/AIhomeTraining_web-master/Listener/frontend/src/containers/post/PostViewerContainer.js"],"names":["React","useEffect","useDispatch","useSelector","withRouter","readPost","unloadPost","PostViewer","PostActionButtons","setOriginalPost","removePost","findLevel","unloadLevel","PostViewerContainer","match","history","postId","username","params","dispatch","post","error","loading","user","levels","level","levelInfo","onEdit","push","onRemove","e","console","log","ownPost","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\nimport { setOriginalPost } from '../../modules/write';\nimport { removePost } from '../../lib/api/posts';\nimport { findLevel, unloadLevel } from '../../modules/level';\n\nconst PostViewerContainer = ({ match, history }) => {\n  // 처음 마운트될 때 포스트 읽기 API 요청\n  const { postId, username } = match.params;\n  const dispatch = useDispatch();\n  const { post, error, loading, user, levels } = useSelector(({ post, loading, user, level }) => ({\n    post: post.post,\n    error: post.error,\n    loading: loading['post/READ_POST'],\n    user: user.user,\n    levels: level.levelInfo,\n  }));\n\n  useEffect(() => {\n    dispatch(readPost(postId)); \n    dispatch(findLevel({username}));\n    // 언마운트될 때 리덕스에서 포스트 데이터 없애기\n    return () => {\n      dispatch(unloadPost());\n      dispatch(unloadLevel());\n    };\n  }, [dispatch, postId]);\n\n  const onEdit = () => {\n      dispatch(setOriginalPost(post));\n      history.push('/write');\n  };\n  \n  const onRemove = async () => {\n    try{\n      await removePost(postId);\n      history.push('/postlist');\n    }catch(e){\n      console.log(e);\n    }\n  };\n  const ownPost = (user && user._id) === (post && post.user._id);\n  return <PostViewer post={post} loading={loading} error={error} levels={levels} actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove} />} />;\n};\n\nexport default withRouter(PostViewerContainer);"]},"metadata":{},"sourceType":"module"}