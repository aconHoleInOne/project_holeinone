{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\awd63\\\\Downloads\\\\AIhomeTraining_web-master\\\\AIhomeTraining_web-master\\\\Listener\\\\frontend\\\\src\\\\components\\\\exercises\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Sketch from \"react-p5\";\nimport ml5 from \"ml5\";\nimport styled from 'styled-components';\nimport { Animated } from \"react-animated-css\";\nimport './Test.css';\nconst LabelBlock = styled.div`\n    font-size : 3em;\n    text-align : center;\n    font-weight: bold;\n    padding: 1rem;\n\n`;\n_c = LabelBlock;\nconst Spacer = styled.div`\n    height: 4rem;\n`;\nconst Wrapper = styled.div`\n    position: relative;\n    text-align: center;\n`;\n_c2 = Wrapper;\n\nconst Test = ({\n  getData,\n  squatCount,\n  lungeCount,\n  shoulderCount\n}) => {\n  _s();\n\n  let video,\n      poseNet,\n      brain,\n      pose,\n      skeleton,\n      state = 'waiting',\n      current,\n      exercise = '';\n  let squat = 0,\n      lungeL = 0,\n      lungeR = 0,\n      press = 0,\n      tree = 0,\n      ck = 0; //운동 횟수 변수\n\n  let squatCk = 0,\n      lungeLCk = 0,\n      lungeRCk = 0,\n      pressCk = 0,\n      treeCk = 0; // 각 운동 종료 여부 확인 변수\n\n  let poseLabel = '분석 중';\n  let countArr = [];\n  let timer, timeover;\n  const ww = window.innerWidth * 0.7;\n  const wh = window.innerHeight * 0.7;\n  let start = 0;\n  useEffect(() => {\n    if (squatCount == 0) {\n      squatCk = 1;\n      countArr.push(0);\n    }\n\n    if (lungeCount == 0) {\n      lungeLCk = 1;\n      lungeRCk = 1;\n      countArr.push(1);\n      countArr.push(2);\n    }\n\n    if (shoulderCount == 0) {\n      pressCk = 1;\n      countArr.push(3);\n    }\n    /*\n    choiceExercise();\n    document.getElementById(\"test\").innerHTML = `${exercise}` + \" 시작하세요\";\n    current = exercise;\n    */\n\n  }, []);\n\n  const choiceExercise = () => {\n    if (squatCk == 1) {\n      if (lungeLCk == 1) {\n        if (lungeRCk == 1) {\n          if (pressCk == 1) {\n            exercise = '나무 자세';\n          } else {\n            exercise = '숄더프레스';\n          }\n        } else {\n          exercise = '런지 오른쪽';\n        }\n      } else {\n        exercise = '런지 왼쪽';\n      }\n    } else {\n      exercise = '스쿼트';\n    }\n  };\n\n  let analysis = [{\n    exname: \"스쿼트\",\n    x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    exname: \"사이드 런지 왼쪽\",\n    x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    exname: \"사이드 런지 오른쪽\",\n    x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    exname: \"숄더프레스\",\n    x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }, {\n    exname: \"나무 자세\",\n    x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }];\n  useEffect(() => {\n    myCustomRedrawAccordingToNewPropsHandler();\n  }, []); //test\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(window.innerWidth * 0.7, window.innerHeight * 0.7).parent(canvasParentRef);\n    video = p5.createCapture(p5.VIDEO);\n    video.size(window.innerWidth * 0.7, window.innerHeight * 0.7);\n    video.hide();\n    poseNet = ml5.poseNet(video); //posenet 시작\n\n    poseNet.on('pose', gotPoses);\n    const options = {\n      inputs: 34,\n      outputs: 7,\n      task: 'classification',\n      debug: true\n    };\n    brain = ml5.neuralNetwork(options); //ml5 neuralNetwork 시작\n\n    const modelInfo = {\n      model: \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model.json\",\n      metadata: \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model_meta.json\",\n      weights: \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model.weights.bin\"\n    }; //model load\n\n    brain.load(modelInfo, brainLoaded);\n  };\n\n  const draw = p5 => {\n    p5.translate(p5.width, 0);\n    p5.scale(-1, 1);\n    p5.image(video, 0, 0, window.innerWidth * 0.7, window.innerHeight * 0.7);\n\n    if (pose) {\n      for (let i = 0; i < skeleton.length; i++) {\n        let a = skeleton[i][0];\n        let b = skeleton[i][1];\n        p5.strokeWeight(2);\n        p5.stroke(73, 161, 165);\n        p5.line(a.position.x * (window.innerWidth * 0.7 / ww), a.position.y * (window.innerHeight * 0.7 / wh), b.position.x * (window.innerWidth * 0.7 / ww), b.position.y * (window.innerHeight * 0.7 / wh));\n      }\n\n      for (let i = 0; i < pose.keypoints.length; i++) {\n        let x = pose.keypoints[i].position.x * (window.innerWidth * 0.7 / ww);\n        let y = pose.keypoints[i].position.y * (window.innerHeight * 0.7 / wh);\n        p5.fill(0);\n        p5.stroke(255);\n        p5.ellipse(x, y, 10, 10);\n      }\n    }\n  };\n\n  const windowResized = p5 => {\n    p5.resizeCanvas(window.innerWidth * 0.7, window.innerHeight * 0.7, true);\n  };\n\n  const myCustomRedrawAccordingToNewPropsHandler = () => {\n    if (getData) {\n      getData(analysis, countArr); //Exercise Container 로 전달\n    }\n  };\n\n  const gotPoses = (poses, x, y) => {\n    if (poses.length > 0) {\n      pose = poses[0].pose;\n      skeleton = poses[0].skeleton;\n\n      for (let i = 0; i < pose.keypoints.length; i++) {\n        x = pose.keypoints[i].position.x;\n        y = pose.keypoints[i].position.y;\n      }\n    }\n  };\n\n  const brainLoaded = () => {\n    console.log('classification ready!');\n    classifyPose();\n  };\n\n  const classifyPose = () => {\n    detectPose(); //사람 카메라 안으로 들어왔는지 확인 하는 함수\n\n    if (pose && state == 'ready') {\n      let inputs = [];\n\n      for (let i = 0; i < pose.keypoints.length; i++) {\n        let x = pose.keypoints[i].position.x;\n        let y = pose.keypoints[i].position.y;\n        inputs.push(x);\n        inputs.push(y);\n      }\n\n      brain.classify(inputs, gotResult);\n    } else {\n      setTimeout(classifyPose, 100); //pose 없으면 대기 후 다시 \n    }\n  };\n\n  ;\n\n  const detectPose = () => {\n    state = 'waiting';\n\n    if (pose) {\n      let nose = pose.keypoints[0].score;\n      let ankleR = pose.keypoints[14].score;\n\n      if (nose > 0.5 && ankleR > 0.5) {\n        state = 'ready';\n\n        if (start === 0) {\n          choiceExercise();\n          document.getElementById(\"test\").innerHTML = `${exercise}` + \" 시작하세요\";\n          current = exercise;\n          start = 1;\n        }\n      } else {\n        state = 'waiting';\n      }\n    }\n  };\n\n  const gotResult = (err, results) => {\n    if (err) {\n      console.log(err);\n      return;\n    }\n\n    if (results && results[0].confidence > 0.65) {\n      if (results[0].label == '5') {\n        poseLabel = '나무 자세';\n      } else {\n        if (results[0].confidence > 0.75) {\n          let la = results[0].label;\n          if (la == '0') poseLabel = '분석 중';else if (la == '1') poseLabel = '스쿼트';else if (la == '2') poseLabel = '런지 왼쪽';else if (la == '3') poseLabel = '런지 오른쪽';else if (la == '4') poseLabel = '숄더프레스';\n        } else {\n          poseLabel = '분석 중';\n        }\n      } //console.log(poseLabel);\n\n\n      if (current != poseLabel) {\n        poseLabel = '분석 중';\n      }\n    } else {\n      poseLabel = '분석 중';\n    }\n\n    if (poseLabel == '분석 중') {\n      setTimeout(() => {\n        ck = 0;\n      }, 500);\n\n      if (tree > 0 && !treeCk) {\n        //나무 자세 시간 종료 전에 멈추면 다시 시작하라고 알림\n        clearInterval(timer);\n        clearTimeout(timeover);\n        document.getElementById(\"test\").innerHTML = \"나무 자세 다시 시작 하세요\";\n      }\n    } else {\n      inputLabel(poseLabel); //라벨, 횟수 화면에 보여주는\n    }\n\n    setTimeout(classifyPose, 800);\n  };\n\n  const save = (index, isTree) => {\n    //현재 자세 좌표 저장하는 함수\n    //isTree == 1 => 나무 자세 좌표 (평균 낼 필요 없음)\n    if (!isTree) {\n      for (let i = 0; i < pose.keypoints.length; i++) {\n        let x = pose.keypoints[i].position.x;\n        let y = pose.keypoints[i].position.y;\n\n        if (index === 0) {\n          analysis[index].x[i] += x / squatCount;\n          analysis[index].y[i] += y / squatCount;\n        } else if (index === 1) {\n          analysis[index].x[i] += x / lungeCount;\n          analysis[index].y[i] += y / lungeCount;\n        } else if (index === 2) {\n          analysis[index].x[i] += x / lungeCount;\n          analysis[index].y[i] += y / lungeCount;\n        } else {\n          analysis[index].x[i] += x / shoulderCount;\n          analysis[index].y[i] += y / shoulderCount;\n        }\n      }\n    } else {\n      for (let i = 0; i < pose.keypoints.length; i++) {\n        let x = pose.keypoints[i].position.x;\n        let y = pose.keypoints[i].position.y;\n        analysis[index].x[i] += x;\n        analysis[index].y[i] += y;\n      }\n    }\n  };\n\n  let inputLabel = label => {\n    // 운동 횟수 세기 + 라벨 작성 함수\n    if (label == '스쿼트' && ck === 0 && squat < squatCount) {\n      ck = 1;\n      setTimeout(() => {\n        squat += 1;\n\n        if (squat >= squatCount && !squatCk) {\n          squatCk = 1;\n          choiceExercise();\n          document.getElementById(\"test\").innerHTML = `${exercise}` + \" 시작하세요\";\n          current = exercise;\n        } else {\n          document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${squat}` + \"회\";\n        }\n\n        save(0, 0); // 현재 좌표 저장\n      }, 600);\n    } else if (label == '런지 왼쪽' && !ck && lungeL < lungeCount && squatCk == 1) {\n      ck = 1;\n      setTimeout(() => {\n        lungeL += 1;\n\n        if (lungeL >= lungeCount && !lungeLCk) {\n          lungeLCk = 1;\n          choiceExercise();\n          document.getElementById(\"test\").innerHTML = `${exercise}` + \" 시작하세요\";\n          current = exercise;\n        } else {\n          document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${lungeL}` + \"회\";\n        }\n\n        save(1, 0);\n      }, 600);\n    } else if (label == '런지 오른쪽' && !ck && lungeR < lungeCount && lungeL >= lungeCount && lungeLCk == 1) {\n      ck = 1;\n      setTimeout(() => {\n        lungeR += 1;\n\n        if (lungeR >= lungeCount && !lungeRCk) {\n          lungeRCk = 1;\n          choiceExercise();\n          document.getElementById(\"test\").innerHTML = `${exercise}` + \" 시작하세요\";\n          current = exercise;\n        } else {\n          document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${lungeR}` + \"회\";\n        }\n\n        save(2, 0);\n      }, 600);\n    } else if (label == '숄더프레스' && ck != 1 && press < shoulderCount && lungeRCk == 1) {\n      ck = 1;\n      setTimeout(() => {\n        press += 1;\n\n        if (press >= shoulderCount && !pressCk) {\n          pressCk = 1;\n          choiceExercise();\n          document.getElementById(\"test\").innerHTML = `${exercise}` + \" 시작하세요\";\n          current = exercise;\n        } else {\n          document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${press}` + \"회\";\n        }\n\n        save(3, 0);\n      }, 600);\n    } else if (label == '나무 자세' && !ck && pressCk == 1) {\n      tree += 1;\n      ck = 1;\n\n      if (!treeCk) {\n        let sec = 15;\n        timer = setInterval(() => {\n          if (sec == 2) save(4, 1); //종료 직전에 좌표 저장\n\n          document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${sec--}` + \"초 남았습니다.\";\n        }, 1000); //1초마다 반복\n\n        timeover = setTimeout(() => {\n          clearInterval(timer);\n          treeCk = 1;\n          document.getElementById(\"test\").innerHTML = \"운동 종료\";\n          myCustomRedrawAccordingToNewPropsHandler(); //Exercise Container 로 analysis 배열 전달하는 함수\n        }, 16000); //1초 더 많이 해야 잘 맞음\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Animated, {\n        animationIn: \"fadeIn\",\n        children: /*#__PURE__*/_jsxDEV(LabelBlock, {\n          id: \"test\",\n          children: \"\\uCE74\\uBA54\\uB77C \\uC548\\uC73C\\uB85C \\uB4E4\\uC5B4\\uC624\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Sketch, {\n        setup: setup,\n        draw: draw,\n        windowResized: windowResized\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Test, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c3 = Test;\nexport default Test;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LabelBlock\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Test\");","map":{"version":3,"sources":["C:/Users/awd63/Downloads/AIhomeTraining_web-master/AIhomeTraining_web-master/Listener/frontend/src/components/exercises/Test.js"],"names":["React","useEffect","Sketch","ml5","styled","Animated","LabelBlock","div","Spacer","Wrapper","Test","getData","squatCount","lungeCount","shoulderCount","video","poseNet","brain","pose","skeleton","state","current","exercise","squat","lungeL","lungeR","press","tree","ck","squatCk","lungeLCk","lungeRCk","pressCk","treeCk","poseLabel","countArr","timer","timeover","ww","window","innerWidth","wh","innerHeight","start","push","choiceExercise","analysis","exname","x","y","myCustomRedrawAccordingToNewPropsHandler","setup","p5","canvasParentRef","createCanvas","parent","createCapture","VIDEO","size","hide","on","gotPoses","options","inputs","outputs","task","debug","neuralNetwork","modelInfo","model","metadata","weights","load","brainLoaded","draw","translate","width","scale","image","i","length","a","b","strokeWeight","stroke","line","position","keypoints","fill","ellipse","windowResized","resizeCanvas","poses","console","log","classifyPose","detectPose","classify","gotResult","setTimeout","nose","score","ankleR","document","getElementById","innerHTML","err","results","confidence","label","la","clearInterval","clearTimeout","inputLabel","save","index","isTree","sec","setInterval"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Sketch from \"react-p5\";\nimport ml5 from \"ml5\";\nimport styled from 'styled-components';\nimport {Animated} from \"react-animated-css\";\nimport './Test.css';\n\nconst LabelBlock = styled.div`\n    font-size : 3em;\n    text-align : center;\n    font-weight: bold;\n    padding: 1rem;\n\n`;\nconst Spacer = styled.div`\n    height: 4rem;\n`;\n\nconst Wrapper = styled.div`\n    position: relative;\n    text-align: center;\n`;  \n\nconst Test = ({getData, squatCount, lungeCount, shoulderCount}) => {\n    let video, poseNet, brain, pose, skeleton,state = 'waiting', current, exercise = '';\n    let squat = 0, lungeL = 0, lungeR = 0, press = 0, tree = 0, ck = 0;  //운동 횟수 변수\n    let squatCk = 0, lungeLCk = 0, lungeRCk = 0, pressCk = 0, treeCk = 0; // 각 운동 종료 여부 확인 변수\n    let poseLabel = '분석 중';\n    let countArr = [];\n    let timer, timeover;\n    const ww = window.innerWidth*0.7;\n    const wh = window.innerHeight*0.7;\n    let start = 0;\n\n    useEffect(() => {\n        if(squatCount == 0){\n            squatCk = 1;\n            countArr.push(0);\n        }\n        if(lungeCount == 0){\n            lungeLCk = 1;\n            lungeRCk = 1;\n            countArr.push(1);\n            countArr.push(2);\n        }\n        if(shoulderCount == 0){\n            pressCk = 1;\n            countArr.push(3);\n        }\n        /*\n        choiceExercise();\n        document.getElementById(\"test\").innerHTML = `${exercise}` + \" 시작하세요\";\n        current = exercise;\n        */\n    }, []);\n    const choiceExercise = () => {\n        if(squatCk == 1){\n            if(lungeLCk == 1){\n                if(lungeRCk == 1){\n                    if(pressCk == 1){\n                        exercise = '나무 자세';\n                    } else {\n                        exercise = '숄더프레스';\n                    }\n                } else {\n                    exercise = '런지 오른쪽';\n                }\n            } else {\n                exercise = '런지 왼쪽';\n            } \n        } else {\n            exercise = '스쿼트';\n        }\n    };\n    let analysis = [\n        {\n            exname: \"스쿼트\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"사이드 런지 왼쪽\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"사이드 런지 오른쪽\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"숄더프레스\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        },\n        {\n            exname: \"나무 자세\",\n            x: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            y: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        }\n    ]\n    useEffect(() => {\n        myCustomRedrawAccordingToNewPropsHandler();\n    }, []) //test\n\n    const setup = (p5,  canvasParentRef) => {\n        p5.createCanvas(window.innerWidth*0.7, window.innerHeight*0.7).parent(canvasParentRef);\n        video = p5.createCapture(p5.VIDEO);\n        video.size(window.innerWidth*0.7, window.innerHeight*0.7);\n        video.hide();\n        poseNet = ml5.poseNet(video);   //posenet 시작\n        poseNet.on('pose',gotPoses);\n        const options = {\n            inputs: 34,\n            outputs: 7,\n            task: 'classification',\n            debug: true\n        };\n        brain = ml5.neuralNetwork(options);  //ml5 neuralNetwork 시작\n        const modelInfo = {\n            model:\"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model.json\",\n            metadata : \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model_meta.json\",\n            weights: \"https://smlistener.s3.ap-northeast-2.amazonaws.com/model_0307/lr_0.02_epoch50_2/model.weights.bin\"\n          };  //model load\n         brain.load(modelInfo, brainLoaded);\n    };\n\n    const draw = (p5) => {\n        p5.translate(p5.width, 0);\n        p5.scale(-1, 1);\n        p5.image(video, 0, 0, window.innerWidth*0.7, window.innerHeight*0.7);\n        if(pose){\n            for(let i=0; i<skeleton.length; i++){\n                let a = skeleton[i][0];\n                let b = skeleton[i][1];\n                p5.strokeWeight(2);\n                p5.stroke(73, 161, 165);\n                p5.line(a.position.x*(window.innerWidth*0.7/ww), a.position.y*(window.innerHeight*0.7/wh), b.position.x*(window.innerWidth*0.7/ww), b.position.y*(window.innerHeight*0.7/wh));\n            }\n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x*(window.innerWidth*0.7/ww);\n                let y = pose.keypoints[i].position.y*(window.innerHeight*0.7/wh);\n                p5.fill(0);\n                p5.stroke(255);\n                p5.ellipse(x,y,10,10); \n            }\n        }\n    };\n    const windowResized = (p5) => {\n        p5.resizeCanvas(window.innerWidth*0.7, window.innerHeight*0.7, true);\n      };\n    \n\n    const myCustomRedrawAccordingToNewPropsHandler = () => {\n        if(getData){\n            getData(analysis, countArr);    //Exercise Container 로 전달\n        }\n    };\n\n    const gotPoses = (poses, x, y) => {\n        if(poses.length > 0){\n          pose = poses[0].pose;\n          skeleton = poses[0].skeleton;\n          \n          for(let i =0; i<pose.keypoints.length; i++){\n              x = pose.keypoints[i].position.x;\n              y = pose.keypoints[i].position.y;\n            }\n        \n        }\n    };\n    const brainLoaded = () => {\n        console.log('classification ready!');\n        classifyPose();\n    };\n    const classifyPose = () => {\n        detectPose();   //사람 카메라 안으로 들어왔는지 확인 하는 함수\n        if(pose && (state == 'ready')){\n            let inputs = [];\n            for(let i =0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                inputs.push(x);\n                inputs.push(y);\n            }\n            brain.classify(inputs, gotResult);   \n        } else{\n            setTimeout(classifyPose, 100);  //pose 없으면 대기 후 다시 \n        }\n    };;\n    const detectPose = () => {\n        state = 'waiting'\n        if (pose) {\n          let nose = pose.keypoints[0].score;\n          let ankleR = pose.keypoints[14].score;\n          if ((nose > 0.5) && (ankleR > 0.5)) {\n            state = 'ready';\n            if (start === 0) {\n                choiceExercise();\n                document.getElementById(\"test\").innerHTML = `${exercise}` + \" 시작하세요\";\n                current = exercise;\n                start = 1; \n            }\n          } else {\n            state = 'waiting';\n          }\n        }\n    };\n    const gotResult = (err, results) => {\n        if(err){\n            console.log(err);\n            return;\n        }\n        if(results && results[0].confidence > 0.65){\n            if(results[0].label == '5'){\n                poseLabel = '나무 자세';\n            } else {\n                if(results[0].confidence > 0.75){\n                    let la = results[0].label;\n                    if(la == '0')    poseLabel = '분석 중';\n                    else if(la == '1')  poseLabel = '스쿼트';\n                    else if(la == '2')  poseLabel = '런지 왼쪽';\n                    else if(la == '3')  poseLabel = '런지 오른쪽';\n                    else if(la == '4')  poseLabel = '숄더프레스';\n                } else {\n                    poseLabel = '분석 중';\n                }\n            }\n            //console.log(poseLabel);\n            if(current != poseLabel){\n                poseLabel = '분석 중';\n            }\n        } else {\n            poseLabel = '분석 중';\n        }\n        if(poseLabel == '분석 중'){\n            setTimeout(()=> {ck=0;}, 500);\n            if(tree>0 && !treeCk){        //나무 자세 시간 종료 전에 멈추면 다시 시작하라고 알림\n                clearInterval(timer);\n                clearTimeout(timeover);\n                document.getElementById(\"test\").innerHTML = \"나무 자세 다시 시작 하세요\";\n            }\n            \n          } \n          else {\n            inputLabel(poseLabel);    //라벨, 횟수 화면에 보여주는\n          }\n          setTimeout(classifyPose, 800);\n    };\n\n    const save = (index, isTree) => {\n        //현재 자세 좌표 저장하는 함수\n        //isTree == 1 => 나무 자세 좌표 (평균 낼 필요 없음)\n        if(!isTree){    \n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                if (index === 0) {\n                    analysis[index].x[i] += (x/squatCount);\n                    analysis[index].y[i] += (y/squatCount);\n                }\n                else if (index === 1) {\n                    analysis[index].x[i] += (x/lungeCount);\n                    analysis[index].y[i] += (y/lungeCount);\n                }\n                else if (index === 2) {\n                    analysis[index].x[i] += (x/lungeCount);\n                    analysis[index].y[i] += (y/lungeCount);\n                }\n                else {\n                    analysis[index].x[i] += (x/shoulderCount);\n                    analysis[index].y[i] += (y/shoulderCount);\n                }\n            }\n        }    \n        else{\n            for(let i = 0; i<pose.keypoints.length; i++){\n                let x = pose.keypoints[i].position.x;\n                let y = pose.keypoints[i].position.y;\n                analysis[index].x[i] += x;\n                analysis[index].y[i] += y;   \n            }\n        }\n    };\n\n    let inputLabel = (label) => {    // 운동 횟수 세기 + 라벨 작성 함수\n        if(label == '스쿼트' && ck === 0 && squat < squatCount){\n            ck = 1;\n            setTimeout(() => {\n                squat += 1;\n                if(squat >= squatCount && !squatCk){\n                    squatCk = 1;\n                    choiceExercise();\n                    document.getElementById(\"test\").innerHTML = `${exercise}`+ \" 시작하세요\";\n                    current = exercise;\n                } else{ \n                    document.getElementById(\"test\").innerHTML = `${label}`+ \" \" + `${squat}` + \"회\";\n                }\n                save(0, 0); // 현재 좌표 저장\n            }, 600);\n        } \n        else if(label == '런지 왼쪽' && !ck && lungeL < lungeCount && squatCk==1){\n            ck = 1;\n            setTimeout(() => {\n                lungeL += 1;\n                if(lungeL >= lungeCount && !lungeLCk){\n                    lungeLCk = 1;\n                    choiceExercise();\n                    document.getElementById(\"test\").innerHTML = `${exercise}`+\" 시작하세요\";\n                    current = exercise;\n                } else{\n                    document.getElementById(\"test\").innerHTML = `${label}`+ \" \" + `${lungeL}` + \"회\";\n                }\n                save(1, 0); \n            }, 600);\n            \n        }\n        else if(label == '런지 오른쪽' && !ck && lungeR < lungeCount && lungeL >= lungeCount && lungeLCk == 1){\n            ck = 1;\n            setTimeout(() => {\n                lungeR += 1;\n                if(lungeR >= lungeCount && !lungeRCk){\n                    lungeRCk = 1;\n                    choiceExercise();\n                    document.getElementById(\"test\").innerHTML = `${exercise}`+\" 시작하세요\";\n                    current = exercise;\n                } else{\n                    document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${lungeR}` + \"회\";\n                }\n                save(2, 0);\n            }, 600);\n            \n        }\n        else if(label == '숄더프레스' && ck!=1 && press < shoulderCount && lungeRCk == 1){\n            ck = 1;\n            setTimeout(() => {\n                press+=1;\n                if(press >= shoulderCount && !pressCk){\n                    pressCk = 1; \n                    choiceExercise();\n                    document.getElementById(\"test\").innerHTML = `${exercise}`+\" 시작하세요\";\n                    current = exercise;\n                } else{\n                    document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${press}` + \"회\";\n                }\n                save(3, 0);\n            }, 600);\n        }\n        else if(label == '나무 자세' && !ck && pressCk == 1){\n            tree += 1;\n            ck = 1;   \n            if(!treeCk){\n                let sec = 15;\n                timer = setInterval(() => {\n                    if(sec == 2)    save(4, 1);     //종료 직전에 좌표 저장\n                    document.getElementById(\"test\").innerHTML = `${label}` + \" \" + `${sec--}` + \"초 남았습니다.\";\n                }, 1000);   //1초마다 반복\n\n                timeover = setTimeout(()=>{\n                    clearInterval(timer);\n                    treeCk = 1;\n                    document.getElementById(\"test\").innerHTML = \"운동 종료\";\n                    myCustomRedrawAccordingToNewPropsHandler();   //Exercise Container 로 analysis 배열 전달하는 함수\n                }, 16000);      //1초 더 많이 해야 잘 맞음\n            }\n        }\n    };\n\n   return (\n    <>\n    <Wrapper>\n    <Animated animationIn=\"fadeIn\"><LabelBlock id='test'>카메라 안으로 들어오세요</LabelBlock></Animated>\n      <Sketch setup={setup} draw={draw} windowResized={windowResized}/>\n    </Wrapper>\n    </>\n   )\n};\nexport default Test;"]},"metadata":{},"sourceType":"module"}