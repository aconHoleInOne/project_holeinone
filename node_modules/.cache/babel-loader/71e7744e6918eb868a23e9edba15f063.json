{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\awd63\\\\Downloads\\\\AIhomeTraining_web-master\\\\AIhomeTraining_web-master\\\\Listener\\\\frontend\\\\src\\\\components\\\\chart\\\\MonthExer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { useSelector } from 'react-redux';\n\nconst MonthExer = () => {\n  _s();\n\n  let jan = 0,\n      feb = 0,\n      mar = 0,\n      apr = 0,\n      may = 0,\n      jun = 0,\n      jul = 0,\n      aug = 0,\n      sep = 0,\n      oct = 0,\n      nov = 0,\n      dec = 0;\n  const user = useSelector(({\n    user\n  }) => ({\n    user: user.user\n  }));\n  const exercises = user.user.exercises;\n  const date = [];\n\n  if (exercises) {\n    const len = exercises.length; //date배열에 달만 뽑아서 저장\n\n    for (let i = 0; i < len; i++) {\n      const exerDate = exercises[i].date;\n      date[i] = exerDate.slice(5, 7);\n    }\n\n    for (let i = 0; i < len; i++) {\n      switch (date[i]) {\n        case \"01\":\n          jan += exercises[i].title;\n          break;\n\n        case \"02\":\n          feb += exercises[i].title;\n          break;\n\n        case \"03\":\n          mar += exercises[i].title;\n          break;\n\n        case \"04\":\n          apr += exercises[i].title;\n          break;\n\n        case \"05\":\n          may += exercises[i].title;\n          break;\n\n        case \"06\":\n          jun += exercises[i].title;\n          break;\n\n        case \"07\":\n          jul += exercises[i].title;\n          break;\n\n        case \"08\":\n          aug += exercises[i].title;\n          break;\n\n        case \"09\":\n          sep += exercises[i].title;\n          break;\n\n        case \"10\":\n          oct += exercises[i].title;\n          break;\n\n        case \"11\":\n          nov += exercises[i].title;\n          break;\n\n        case \"12\":\n          dec += exercises[i].title;\n          break;\n      }\n    }\n\n    ;\n  }\n\n  let data = {\n    labels: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n    datasets: [{\n      label: '총 운동 시간',\n      data: [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec],\n      borderWidth: 1,\n      borderColor: \"rgba(110,198,221, 1)\",\n      backgroundColor: \"rgba(110,198,221, 0.3)\",\n      fill: true,\n      lineTension: 0.2\n    }]\n  };\n  let options = {\n    maintainAspectRatio: true,\n    // default value. false일 경우 포함된 div의 크기에 맞춰서 그려짐.\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 11\n  }, this);\n};\n\n_s(MonthExer, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = MonthExer;\nexport default MonthExer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthExer\");","map":{"version":3,"sources":["C:/Users/awd63/Downloads/AIhomeTraining_web-master/AIhomeTraining_web-master/Listener/frontend/src/components/chart/MonthExer.js"],"names":["React","Line","useSelector","MonthExer","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","user","exercises","date","len","length","i","exerDate","slice","title","data","labels","datasets","label","borderWidth","borderColor","backgroundColor","fill","lineTension","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { useSelector } from 'react-redux';\n\nconst MonthExer = () => {\n\n    let jan = 0, feb = 0, mar = 0, apr = 0, may = 0, jun = 0, jul = 0, aug = 0, sep = 0, oct = 0, nov = 0, dec = 0;\n    const user = useSelector(({user}) => ({\n        user: user.user\n    }));\n    const exercises = user.user.exercises;\n    const date = [];\n    if(exercises){\n    const len = exercises.length;\n    //date배열에 달만 뽑아서 저장\n    for(let i = 0 ; i< len; i++) {\n        const exerDate = exercises[i].date;\n        date[i] = exerDate.slice(5,7);\n    }\n\n    for(let i=0; i<len; i++) {\n        switch (date[i]) {\n            case \"01\" :\n                jan += exercises[i].title;\n                break;\n            case \"02\" :\n                feb += exercises[i].title;\n                break;\n            case \"03\" :\n                mar += exercises[i].title;\n                break;\n            case \"04\" :\n                apr += exercises[i].title;\n                break;\n            case \"05\" :\n                may += exercises[i].title;\n                break;\n            case \"06\" :\n                jun += exercises[i].title;\n                break;\n            case \"07\" :\n                jul += exercises[i].title;\n                break;\n            case \"08\" :\n                aug += exercises[i].title;\n                break;\n            case \"09\" :\n                sep += exercises[i].title;\n                break;\n            case \"10\" :\n                oct += exercises[i].title;\n                break;\n            case \"11\" :\n                nov += exercises[i].title;\n                break;\n            case \"12\" :\n                dec += exercises[i].title;\n                break;\n        }\n    };\n}\n\n    let data = {\n        labels: [\"1월\", \"2월\", \"3월\", \"4월\", \"5월\", \"6월\", \"7월\", \"8월\", \"9월\", \"10월\", \"11월\", \"12월\"],\n        datasets: [{\n            label: '총 운동 시간',\n            data: [jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec ],\n            borderWidth: 1,\n            borderColor: \"rgba(110,198,221, 1)\",\n            backgroundColor: \"rgba(110,198,221, 0.3)\",\n            fill: true,\n            lineTension: 0.2\n        }]\n    };\n\n    let options = {\n        maintainAspectRatio: true, // default value. false일 경우 포함된 div의 크기에 맞춰서 그려짐.\n\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:true\n                }\n            }]\n        }\n    };\n\n    return (\n          <Line \n          data = {data}\n          options = {options}/>\n          \n      );\n\n}\n\nexport default MonthExer;"]},"metadata":{},"sourceType":"module"}