{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\awd63\\\\Desktop\\\\project\\\\project_holeinone\\\\src\\\\components\\\\posts\\\\PostList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/style/palette';\nimport SubInfo from '../common/SubInfo';\nimport { Link } from 'react-router-dom';\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n_c = PostListBlock;\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 5em;\n`;\n_c2 = WritePostButtonWrapper;\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n_c3 = PostItemBlock;\n\nconst PostItem = ({\n  post\n}) => {\n  _s();\n\n  const [usrlevel, setLevel] = useState('');\n  const {\n    publishedDate,\n    user,\n    title,\n    body,\n    _id\n  } = post;\n  return /*#__PURE__*/_jsxDEV(PostItemBlock, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/@${user.username}/${_id}`,\n        style: {\n          color: 'black',\n          textDecoration: 'none'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubInfo, {\n      username: user.username,\n      userlevel: usrlevel,\n      publishedDate: new Date(publishedDate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostItem, \"8GdIHJYDWvPiQmK5dtJFPdSpJS8=\");\n\n_c4 = PostItem;\n\nconst PostList = ({\n  posts,\n  loading,\n  error,\n  showWriteButton\n}) => {\n  _s2();\n\n  const [check, setCheck] = useState(false);\n  useEffect(() => {\n    if (posts && posts.length == 0) {\n      setCheck(true); //게시글 존재 여부 판단\n    } else {\n      setCheck(false);\n    }\n  }, [posts]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PostListBlock, {\n      children: \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PostListBlock, {\n    children: [/*#__PURE__*/_jsxDEV(WritePostButtonWrapper, {\n      children: showWriteButton && /*#__PURE__*/_jsxDEV(Button, {\n        to: \"/write\",\n        style: {\n          textDecoration: 'none',\n          color: 'white'\n        },\n        children: \"\\uC0C8 \\uAE00 \\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), check && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '1.5rem',\n        fontWeight: 'bold',\n        padding: '4% 0'\n      },\n      children: \"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), !loading && posts && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PostList, \"MlGyz5WnialQ8kF9iIFA++BZIgw=\");\n\n_c5 = PostList;\nexport default PostList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PostListBlock\");\n$RefreshReg$(_c2, \"WritePostButtonWrapper\");\n$RefreshReg$(_c3, \"PostItemBlock\");\n$RefreshReg$(_c4, \"PostItem\");\n$RefreshReg$(_c5, \"PostList\");","map":{"version":3,"sources":["C:/Users/awd63/Desktop/project/project_holeinone/src/components/posts/PostList.js"],"names":["React","useState","useEffect","styled","Responsive","Button","palette","SubInfo","Link","PostListBlock","WritePostButtonWrapper","div","PostItemBlock","gray","PostItem","post","usrlevel","setLevel","publishedDate","user","title","body","_id","username","color","textDecoration","Date","PostList","posts","loading","error","showWriteButton","check","setCheck","length","fontSize","fontWeight","padding","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/style/palette';\nimport SubInfo from '../common/SubInfo';\nimport { Link } from 'react-router-dom';\n\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\n\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 5em;\n`;\n\nconst PostItemBlock = styled.div`\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  /* 맨 위 포스트는 padding-top 없음 */\n  &:first-child {\n    padding-top: 0;\n  }\n  & + & {\n    border-top: 1px solid ${palette.gray[2]};\n  }\n  h2 {\n    font-size: 2rem;\n    margin-bottom: 0;\n    margin-top: 0;\n    &:hover {\n      color: ${palette.gray[6]};\n    }\n  }\n  p {\n    margin-top: 2rem;\n  }\n`;\n\n\nconst PostItem = ({ post }) => {\n  const [usrlevel, setLevel] = useState('');\n  const { publishedDate, user, title, body, _id } = post;\n\n\n  return (\n    <PostItemBlock>\n      <h2>\n        <Link to={`/@${user.username}/${_id}`} style={{color: 'black', textDecoration: 'none'}}>{title}</Link>\n      </h2>\n      {<SubInfo \n        username ={user.username} \n        userlevel={usrlevel}\n        publishedDate={new Date(publishedDate)}/>}\n      <p>{body}</p>\n    </PostItemBlock>\n  );\n};\n\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\n  const [check, setCheck] = useState(false);\n  useEffect(() => {\n    if(posts && posts.length == 0){\n      setCheck(true);   //게시글 존재 여부 판단\n    } else {\n      setCheck(false);\n    }\n  }, [posts])\n\n  if (error) {\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\n  }\n  \n  return (\n    <PostListBlock>\n      <WritePostButtonWrapper>\n      {showWriteButton && (\n          <Button to=\"/write\" style={{textDecoration: 'none', color: 'white'}}>\n            새 글 작성하기\n          </Button>\n        )}\n      </WritePostButtonWrapper>\n      {/*  로딩 중 아니고, 포스트 배열이 존재할 때만 보여줌 */}\n      {check && \n        <div style={{fontSize: '1.5rem', fontWeight: 'bold', padding:'4% 0'}}>\n          게시글이 없습니다.</div>}\n\n      {!loading && posts && (\n        <div>\n         {posts.map(post => (\n          <PostItem post={post} key={post._id} />\n        ))}\n        </div>\n      )}\n\n    </PostListBlock>\n  );\n};\n\nexport default PostList;"]},"metadata":{},"sourceType":"module"}