{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\nconst INITIALIZE = 'level/INITIALIZE'; // 모든 내용 초기화\n\nconst UNLOAD_LEVEL = 'level/UNLOAD_LEVEL'; //레벨 비우기\n\nconst [FIND_LEVEL, FIND_LEVEL_SUCCESS, FIND_LEVEL_FAILIRE] = createRequestActionTypes('level/FIND_LEVEL'); //레벨 찾기\n\nexport const findLevel = createAction(FIND_LEVEL, ({\n  username\n}) => ({\n  username\n}));\nexport const unloadLevel = createAction(UNLOAD_LEVEL);\nconst findLevelSaga = createRequestSaga(FIND_LEVEL, authAPI.findLevel);\nexport function* levelSaga() {\n  yield takeLatest(FIND_LEVEL, findLevelSaga);\n}\nconst initialState = {\n  levelInfo: null,\n  error: null\n};\nconst level = handleActions({\n  [INITIALIZE]: state => initialState,\n  [FIND_LEVEL]: state => ({ ...state,\n    levelInfo: null,\n    error: null\n  }),\n  [FIND_LEVEL_SUCCESS]: (state, {\n    payload: levelInfo\n  }) => ({ ...state,\n    levelInfo\n  }),\n  [FIND_LEVEL_FAILIRE]: (state, {\n    payload: error\n  }) => ({ ...state,\n    error\n  }),\n  [UNLOAD_LEVEL]: () => initialState\n}, initialState);\nexport default level;","map":{"version":3,"sources":["C:/Users/awd63/Downloads/AIhomeTraining_web-master/AIhomeTraining_web-master/Listener/frontend/src/modules/level.js"],"names":["createAction","handleActions","takeLatest","createRequestSaga","createRequestActionTypes","authAPI","INITIALIZE","UNLOAD_LEVEL","FIND_LEVEL","FIND_LEVEL_SUCCESS","FIND_LEVEL_FAILIRE","findLevel","username","unloadLevel","findLevelSaga","levelSaga","initialState","levelInfo","error","level","state","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,iBAAP,IACIC,wBADJ,QAES,0BAFT;AAGA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AAEA,MAAMC,UAAU,GAAG,kBAAnB,C,CAAuC;;AACvC,MAAMC,YAAY,GAAG,oBAArB,C,CAA2C;;AAC3C,MAAM,CACFC,UADE,EAEFC,kBAFE,EAGFC,kBAHE,IAIFN,wBAAwB,CAAC,kBAAD,CAJ5B,C,CAIkD;;AAElD,OAAO,MAAMO,SAAS,GAAGX,YAAY,CAACQ,UAAD,EAAa,CAAC;AAAEI,EAAAA;AAAF,CAAD,MAAmB;AACjEA,EAAAA;AADiE,CAAnB,CAAb,CAA9B;AAGP,OAAO,MAAMC,WAAW,GAAGb,YAAY,CAACO,YAAD,CAAhC;AAEP,MAAMO,aAAa,GAAGX,iBAAiB,CAACK,UAAD,EAAaH,OAAO,CAACM,SAArB,CAAvC;AAEA,OAAO,UAAUI,SAAV,GAAqB;AACxB,QAAMb,UAAU,CAACM,UAAD,EAAaM,aAAb,CAAhB;AACH;AAED,MAAME,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,IADM;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,MAAMC,KAAK,GAAGlB,aAAa,CACvB;AACI,GAACK,UAAD,GAAcc,KAAK,IAAIJ,YAD3B;AAEI,GAACR,UAAD,GAAcY,KAAK,KAAG,EAClB,GAAGA,KADe;AAElBH,IAAAA,SAAS,EAAE,IAFO;AAGlBC,IAAAA,KAAK,EAAE;AAHW,GAAH,CAFvB;AAOI,GAACT,kBAAD,GAAsB,CAACW,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEJ;AAAX,GAAR,MAAmC,EACrD,GAAGG,KADkD;AAErDH,IAAAA;AAFqD,GAAnC,CAP1B;AAWI,GAACP,kBAAD,GAAsB,CAACU,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,MAA+B,EACjD,GAAGE,KAD8C;AAEjDF,IAAAA;AAFiD,GAA/B,CAX1B;AAeI,GAACX,YAAD,GAAgB,MAAMS;AAf1B,CADuB,EAkBvBA,YAlBuB,CAA3B;AAqBA,eAAeG,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n    createRequestActionTypes\n  } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst INITIALIZE = 'level/INITIALIZE'; // 모든 내용 초기화\nconst UNLOAD_LEVEL = 'level/UNLOAD_LEVEL'; //레벨 비우기\nconst [\n    FIND_LEVEL,\n    FIND_LEVEL_SUCCESS,\n    FIND_LEVEL_FAILIRE,\n] = createRequestActionTypes('level/FIND_LEVEL'); //레벨 찾기\n\nexport const findLevel = createAction(FIND_LEVEL, ({ username }) => ({\n    username,\n}));\nexport const unloadLevel = createAction(UNLOAD_LEVEL);\n\nconst findLevelSaga = createRequestSaga(FIND_LEVEL, authAPI.findLevel);\n\nexport function* levelSaga(){\n    yield takeLatest(FIND_LEVEL, findLevelSaga);\n}\n\nconst initialState = {\n    levelInfo: null,\n    error: null,\n};\n\nconst level = handleActions(\n    {\n        [INITIALIZE]: state => initialState,\n        [FIND_LEVEL]: state=>({\n            ...state,\n            levelInfo: null,\n            error: null,\n        }),\n        [FIND_LEVEL_SUCCESS]: (state, { payload: levelInfo}) => ({\n            ...state,\n            levelInfo,\n        }),\n        [FIND_LEVEL_FAILIRE]: (state, { payload: error}) => ({\n            ...state,\n            error,\n        }),\n        [UNLOAD_LEVEL]: () => initialState,\n    },\n    initialState,\n);\n\nexport default level;"]},"metadata":{},"sourceType":"module"}