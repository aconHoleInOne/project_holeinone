{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\awd63\\\\Downloads\\\\AIhomeTraining_web-master\\\\AIhomeTraining_web-master\\\\Listener\\\\frontend\\\\src\\\\components\\\\write\\\\Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.bubble.css';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Responsive from '../common/Responsive';\nconst EditorBlock = styled(Responsive)`\n    /* 페이지 위 아래 여백 지정 */\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n`;\n_c = EditorBlock;\nconst TitleInput = styled.input`\n  font-size: 3rem;\n  outline: none;\n  padding-bottom: 0.5rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[4]};\n  margin-bottom: 2rem;\n  width: 100%;\n`;\n_c2 = TitleInput;\nconst QuillWrapper = styled.div`\n  /* 최소 크기 지정 및 padding 제거 */\n  .ql-editor {\n    padding: 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor.ql-blank::before {\n    left: 0px;\n  }\n`;\n_c3 = QuillWrapper;\n\nconst Editor = ({\n  title,\n  body,\n  onChangeField\n}) => {\n  _s();\n\n  const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\n\n  const quillInstance = useRef(null); // Quill 인스턴스를 설정\n\n  useEffect(() => {\n    quillInstance.current = new Quill(quillElement.current, {\n      theme: 'bubble',\n      placeholder: '내용을 작성하세요...',\n      modules: {\n        // 더 많은 옵션\n        // https://quilljs.com/docs/modules/toolbar/ 참고\n        toolbar: [[{\n          header: '1'\n        }, {\n          header: '2'\n        }], ['bold', 'italic', 'underline', 'strike'], [{\n          list: 'ordered'\n        }, {\n          list: 'bullet'\n        }], ['blockquote', 'code-block', 'link', 'image']]\n      }\n    });\n    const quill = quillInstance.current;\n    quill.on('text-change', (delta, oldDelta, source) => {\n      if (source === 'user') {\n        onChangeField({\n          key: 'body',\n          value: quill.root.innerHTML\n        });\n      }\n    });\n  }, [onChangeField]);\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (mounted.current) return;\n    mounted.current = true;\n    quillInstance.current.root.innerHTML = body;\n  }, [body]);\n\n  const onChangeTitle = e => {\n    onChangeField({\n      key: 'title',\n      value: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(EditorBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TitleInput, {\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      onChange: onChangeTitle,\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(QuillWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: quillElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Editor, \"N/Pm7Lzj4NqsLoTNk17UjNxN+lc=\");\n\n_c4 = Editor;\nexport default Editor;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EditorBlock\");\n$RefreshReg$(_c2, \"TitleInput\");\n$RefreshReg$(_c3, \"QuillWrapper\");\n$RefreshReg$(_c4, \"Editor\");","map":{"version":3,"sources":["C:/Users/awd63/Downloads/AIhomeTraining_web-master/AIhomeTraining_web-master/Listener/frontend/src/components/write/Editor.js"],"names":["React","useRef","useEffect","Quill","styled","palette","Responsive","EditorBlock","TitleInput","input","gray","QuillWrapper","div","Editor","title","body","onChangeField","quillElement","quillInstance","current","theme","placeholder","modules","toolbar","header","list","quill","on","delta","oldDelta","source","key","value","root","innerHTML","mounted","onChangeTitle","e","target"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport Quill from 'quill';\nimport 'quill/dist/quill.bubble.css';\nimport styled from 'styled-components';\nimport palette from '../../lib/style/palette';\nimport Responsive from '../common/Responsive';\n\nconst EditorBlock = styled(Responsive)`\n    /* 페이지 위 아래 여백 지정 */\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n`;\nconst TitleInput = styled.input`\n  font-size: 3rem;\n  outline: none;\n  padding-bottom: 0.5rem;\n  border: none;\n  border-bottom: 1px solid ${palette.gray[4]};\n  margin-bottom: 2rem;\n  width: 100%;\n`;\nconst QuillWrapper = styled.div`\n  /* 최소 크기 지정 및 padding 제거 */\n  .ql-editor {\n    padding: 0;\n    min-height: 320px;\n    font-size: 1.125rem;\n    line-height: 1.5;\n  }\n  .ql-editor.ql-blank::before {\n    left: 0px;\n  }\n`;\n\nconst Editor = ({ title, body, onChangeField }) => {\n    const quillElement = useRef(null); // Quill을 적용할 DivElement를 설정\n    const quillInstance = useRef(null); // Quill 인스턴스를 설정\n  \n    useEffect(() => {\n      quillInstance.current = new Quill(quillElement.current, {\n        theme: 'bubble',\n        placeholder: '내용을 작성하세요...',\n        modules: {\n          // 더 많은 옵션\n          // https://quilljs.com/docs/modules/toolbar/ 참고\n          toolbar: [\n            [{ header: '1' }, { header: '2' }],\n            ['bold', 'italic', 'underline', 'strike'],\n            [{ list: 'ordered' }, { list: 'bullet' }],\n            ['blockquote', 'code-block', 'link', 'image'],\n          ],\n        },\n      });\n\n      const quill = quillInstance.current;\n      quill.on('text-change', (delta, oldDelta, source) => {\n          if(source === 'user') {\n              onChangeField({key: 'body', value: quill.root.innerHTML});\n          }\n      });\n    }, [onChangeField]);\n\n    const mounted = useRef(false);\n    useEffect(()=> {\n        if(mounted.current) return;\n        mounted.current = true;\n        quillInstance.current.root.innerHTML = body;\n    }, [body]);\n\n    const onChangeTitle = e => {\n        onChangeField({key: 'title', value: e.target.value});\n    }\n\n    return (\n      <EditorBlock>\n        <TitleInput\n          placeholder=\"제목을 입력하세요\"\n          onChange={onChangeTitle}\n          value={title}\n        />\n        <QuillWrapper>\n          <div ref={quillElement} />\n        </QuillWrapper>\n      </EditorBlock>\n    );\n  };\n  \n  export default Editor;"]},"metadata":{},"sourceType":"module"}